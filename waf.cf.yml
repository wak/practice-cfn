AWSTemplateFormatVersion: 2010-09-09

Description:
  Web Application Firewall

Parameters:
  MyIpAddress:
    Type: String

Resources:
  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        CloudWatchMetricsEnabled: True
        # CloudWatchの 以下のメトリクスが作成される。
        #   [AWS/WAFV2] > [Region=ap-northeast-1, Rule=SingleRuleTest, WebACL=...]
        MetricName: PracticeWebACL1
        # Sampledにすると、どこから、どのURIにアクセスがあり、どう処理したかが記録される。
        SampledRequestsEnabled: True
      Rules:
        # HTTPリクエストヘッダ check == aabbcc のとき、Accept。
        - Name: SingleRuleTest
          Action: { Block: {} }
          Priority: 0
          Statement:
            ByteMatchStatement:
              PositionalConstraint: EXACTLY
              FieldToMatch: { SingleHeader: check }
              SearchString: aabbcc
              TextTransformations: [ { Priority: 0, Type: NONE} ]
          VisibilityConfig:
            CloudWatchMetricsEnabled: True
            MetricName: SingleRuleTest
            SampledRequestsEnabled: True

        # HTTPリクエストヘッダ and1 == aab && and2 == bcc のとき、Accept。
        - Name: AndRuleTest
          Priority: 1
          Action: { Block: {} }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AndRuleTest
          Statement:
            AndStatement:
              Statements:
                - ByteMatchStatement:
                    FieldToMatch: { SingleHeader: { Name: and1 } }
                    PositionalConstraint: EXACTLY
                    SearchString: aab
                    TextTransformations: [ {Type: NONE, Priority: 0} ]
                - ByteMatchStatement:
                    FieldToMatch: { SingleHeader: { Name: and2 } }
                    PositionalConstraint: EXACTLY
                    SearchString: bcc
                    TextTransformations: [ { Type: NONE, Priority: 0 } ]
        - Name: IpSetTest
          Action: { Count: {} }
          Priority: 2
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt IPSet.Arn
          VisibilityConfig:
            SampledRequestsEnabled: False
            CloudWatchMetricsEnabled: True
            MetricName: IpSetTest

        # マネージドルール
        - Name: AWS-AWSManagedRulesAdminProtectionRuleSet
          Priority: 3
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAdminProtectionRuleSet
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: False
            CloudWatchMetricsEnabled: False
            MetricName: AWS-AWSManagedRulesAdminProtectionRuleSet

        # My RuleGroup
        - Name: RuleGroupTest
          OverrideAction: { None: {} }
          Priority: 4
          Statement:
            RuleGroupReferenceStatement:
              Arn: !GetAtt RuleGroup.Arn
          VisibilityConfig:
            SampledRequestsEnabled: True
            CloudWatchMetricsEnabled: True
            MetricName: RuleGroupTest

  WebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Join
        - ""
        - - 'arn:aws:apigateway:'
          - !Ref AWS::Region
          - ::/restapis/
          - !ImportValue PracticeApiId
          - /stages/
          - !ImportValue PracticeApiStageName
      WebACLArn: !GetAtt WebACL.Arn

  IPSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Addresses:
        - !Sub "${MyIpAddress}/32"
      IPAddressVersion: IPV4
      Scope: REGIONAL

  RuleGroup:
    Type: AWS::WAFv2::RuleGroup
    Properties:
      VisibilityConfig:
        CloudWatchMetricsEnabled: True
        SampledRequestsEnabled: True
        MetricName: PracticeRuleGroup
      Capacity: 50
      Scope: REGIONAL
      Rules:
        - Name: BlockMe
          Priority: 0
          Action: { Block: {} }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: BlockMe
          Statement:
            ByteMatchStatement:
              FieldToMatch: { QueryString: {} }
              PositionalConstraint: CONTAINS
              SearchString: blockme
              TextTransformations:
                - { Type: NONE, Priority: 0 }

Outputs:
  Test:
    Value: !Join
      - ""
      - - 'arn:aws:apigateway:'
        - !Ref AWS::Region
        - ::/restapis/
        - !ImportValue PracticeApiId
        - /stages/
        - !ImportValue PracticeApiStageName
